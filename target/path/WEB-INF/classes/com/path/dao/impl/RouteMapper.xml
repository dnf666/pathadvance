<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.path.dao.RouteMapper" >
  <resultMap id="BaseResultMap" type="com.path.model.Route" >
    <id column="r_id" property="rId" jdbcType="INTEGER" />
    <id column="f_id" property="fId" jdbcType="INTEGER" />
    <id column="v_id" property="vId" jdbcType="INTEGER" />
    <result column="route" property="route" jdbcType="VARCHAR" />
    <result column="total_time" property="totalTime" jdbcType="DOUBLE" />
    <result column="total_dis" property="totalDis" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    r_id, f_id, v_id, route, total_time, tota_dis
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.path.model.RouteKey" >
    select 
    <include refid="Base_Column_List" />
    from route
    where r_id = #{rId,jdbcType=INTEGER}
      and f_id = #{fId,jdbcType=INTEGER}
      and v_id = #{vId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.path.model.RouteKey" >
    delete from route
    where r_id = #{rId,jdbcType=INTEGER}
      and f_id = #{fId,jdbcType=INTEGER}
      and v_id = #{vId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.path.model.Route" >
    insert into route (r_id, f_id, v_id, 
      route, total_time, tota_dis
      )
    values (#{rId,jdbcType=INTEGER}, #{fId,jdbcType=INTEGER}, #{vId,jdbcType=INTEGER}, 
      #{route,jdbcType=VARCHAR}, #{totalTime,jdbcType=DOUBLE}, #{totaDis,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.path.model.Route" >
    insert into route
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rId != null" >
        r_id,
      </if>
      <if test="fId != null" >
        f_id,
      </if>
      <if test="vId != null" >
        v_id,
      </if>
      <if test="route != null" >
        route,
      </if>
      <if test="totalTime != null" >
        total_time,
      </if>
      <if test="totaDis != null" >
        tota_dis,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rId != null" >
        #{rId,jdbcType=INTEGER},
      </if>
      <if test="fId != null" >
        #{fId,jdbcType=INTEGER},
      </if>
      <if test="vId != null" >
        #{vId,jdbcType=INTEGER},
      </if>
      <if test="route != null" >
        #{route,jdbcType=VARCHAR},
      </if>
      <if test="totalTime != null" >
        #{totalTime,jdbcType=DOUBLE},
      </if>
      <if test="totaDis != null" >
        #{totaDis,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.path.model.Route" >
    update route
    <set >
      <if test="route != null" >
        route = #{route,jdbcType=VARCHAR},
      </if>
      <if test="totalTime != null" >
        total_time = #{totalTime,jdbcType=DOUBLE},
      </if>
      <if test="totaDis != null" >
        tota_dis = #{totaDis,jdbcType=DOUBLE},
      </if>
    </set>
    where r_id = #{rId,jdbcType=INTEGER}
      and f_id = #{fId,jdbcType=INTEGER}
      and v_id = #{vId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.path.model.Route" >
    update route
    set route = #{route,jdbcType=VARCHAR},
      total_time = #{totalTime,jdbcType=DOUBLE},
      tota_dis = #{totaDis,jdbcType=DOUBLE}
    where r_id = #{rId,jdbcType=INTEGER}
      and f_id = #{fId,jdbcType=INTEGER}
      and v_id = #{vId,jdbcType=INTEGER}
  </update>
  <select id="findMinDistanceForFour" resultMap="BaseResultMap">
    select f_id,sum(total_dis) AS total_dis,sum(total_time) as total_time from route group by f_id order by total_dis ASC limit 4;
  </select>
  <select id="findMinTimeForFour" resultMap="BaseResultMap">
    select f_id,sum(total_time) AS total_time,sum(total_dis) AS total_dis from route group by f_id order by total_time ASC limit 4;
  </select>
  <select id="findRouteByFid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select route from route where f_id = #{postData};
  </select>
</mapper>