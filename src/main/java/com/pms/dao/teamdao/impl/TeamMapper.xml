<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pms.dao.teamdao.TeamMapper">
    <!--对团队的操控-->
    <resultMap id="team" type="com.pms.model.team.Team">
        <id column="team_id" property="teamId"/>
        <result column="team_name" property="teamName"/>
        <result column="create_by" property="createBy"/>
        <result column="create_time" property="createTime"/>
        <result column="del_flag" property="delFlag"/>
        <result column="del_time" property="delTime"/>
        <result column="del_remarks" property="delRemarks"/>
    </resultMap>
    <!--对团队表进行操作，新建一个团队-->
    <insert id="addTeam">
        INSERT INTO team
        (team_name,create_by,create_time) VALUES
        (#{teamName},#{createBy},#{createTime})
    </insert>
    <!--  注销团队,因为并不是实际在数据库中删除信息，所以打上删除的标记就好-->
    <update id="delTeam" parameterType="com.pms.model.team.Team">
        UPDATE team
        <set>
            <if test="delFlag!=0">
                del_flag=#{delFlag},
            </if>
            <if test="delTime!=null">
                del_time=#{delTime},
            </if>
            <if test="delRemarks!=null">
                del_remarks=#{delRemarks}
            </if>
        </set>
        WHERE team_name=#{teamName} AND del_flag=0
    </update>
    <!--得到团队的信息-->
    <resultMap id="teamInfo" type="com.pms.model.team.Team">
        <result column="team_name" property="teamName"/>
        <result column="create_by" property="createBy"/>
        <result column="create_time" property="createTime"/>
    </resultMap>
    <select id="getTeamInfo" resultMap="teamInfo" parameterType="java.lang.String">
        select * from team WHERE team_name=#{teamName} AND del_flag=0;
    </select>
    <select id="getTeamById" parameterType="java.lang.Integer" resultMap="teamInfo">
        select * from team WHERE team_id=#{teamId} AND del_flag=0;
    </select>
    <!--得到所有团队-->
    <select id="getAllTeam" resultMap="teamInfo">
        select * from team WHERE  del_flag=0;
    </select>
    <!--对团队成员的操控-->
    <resultMap id="teamMember" type="com.pms.model.team.TeamMember">
        <result column="user_name" property="userName"  />
        <result column="team_name" property="teamName" />
        <result column="team_role" property="teamRole"  />
        <result column="team_privelige" property="teamPrivelige"/>
        <result column="join_time" property="joinTime" />
        <result column="join_by" property="joinBy"  />
        <result column="del_flag" property="delFlag" />
        <result column="del_time" property="delTime" />
        <result column="del_by" property="delBy" />
        <result column="del_remarks" property="delRemarks" />
    </resultMap>
    <!--设置团队成员的权限-->
    <update id="setPrivilege" parameterType="com.pms.model.team.TeamMember">
        UPDATE team_member
        <set>
                  team_privelige = #{teamPrivelige}
        </set>
        WHERE team_name = #{teamName} AND del_flag = 0 AND user_name = #{userName}
    </update>
    <!--团队成员的增加-->
    <insert id="addTeamMember" parameterType="com.pms.model.team.TeamMember">
          INSERT INTO team_member
          (user_name,team_name,team_role,join_time,join_by,team_privelige)VALUES
          (#{userName},#{teamName},#{teamRole},#{joinTime},#{joinBy},#{teamPrivelige})
    </insert>
    <!--重新添加一个曾被删除的团队成员-->
    <update id="reAddTeamMember" parameterType="com.pms.model.team.TeamMember">
        UPDATE team_member
        <set>
            del_flag = 0
        </set>
        WHERE team_name = #{teamName} AND del_flag = 1 AND user_name = #{userName}
    </update>
    <!--团队成员的删除即打上删除标志-->
    <update id="delTeamMember" parameterType="com.pms.model.team.TeamMember">
        UPDATE  team_member
        <set>
            <if test="delFlag!=0">
                del_flag=#{delFlag},
            </if>
            <if test="delTime!=null">
                del_time=#{delTime},
            </if>
            <if test="delRemarks!=null">
                del_remarks=#{delRemarks}
            </if>
        </set>
        WHERE team_name=#{teamName} AND user_name=#{userName}
    </update>
    <!--得到团队成员-->
    <select id="getTeamMembersByTeamName" parameterType="String" resultMap="teamMember">
        SELECT * FROM team_member WHERE del_flag=0 AND team_name=#{teamName};
    </select>
    <select id="getTeamInfoByUserName" parameterType="String" resultMap="teamMember">
        SELECT * FROM team_member WHERE del_flag=0  AND user_name=#{userName};
    </select>
    <select id="getTeamMemberByTeamNameAndUserName" resultMap="teamMember">
        SELECT * FROM team_member WHERE user_name = #{userName} AND del_flag=0 AND team_name=#{teamName};
    </select>
    <!--得到已经被删除的团队成员-->
    <select id="getDelTeamMember" resultMap="teamMember">
        SELECT * FROM team_member WHERE user_name = #{userName} AND del_flag = 1 AND team_name = #{teamName};
    </select>
    <!--团队公告-->
    <resultMap id="teamNotice" type="com.pms.model.team.TeamNotice">
        <result column="id" property="id"/>
        <result column="title" property="title" />
        <result column="create_by" property="createBy"/>
        <result column="create_time" property="createTime" />
        <result column="del_flag" property="delFlag" />
        <result column="del_time" property="delTime" />
        <result column="context" property="context" />
        <result column="team_name" property="teamName" />
    </resultMap>
    <!--创建团队公告-->
    <!--创建公告-->
    <insert id="addNotice" parameterType="com.pms.model.team.TeamNotice">
        INSERT INTO notice
        (title,create_by,create_time,context,team_name) VALUES
        (#{title},#{createBy},#{createTime},#{context},#{teamName})
    </insert>
    <!--删除公告-->
    <update id="delNotice" parameterType="com.pms.model.team.TeamNotice">
        UPDATE notice
        <set>
            <if test="delFlag!=0">
                del_flag=#{delFlag},
            </if>
            <if test="delTime!=null">
                del_time=#{delTime}
            </if>
        </set>
        WHERE id=#{id} AND del_flag=0;
    </update>
    <!--更改公告-->
    <update id="updateNotice" parameterType="com.pms.model.team.TeamNotice">
        UPDATE notice
        <set>
            <if test="title!=null">
                title=#{title},
            </if>
            <if test="createBy!=null">
                create_by=#{createBy},
            </if>
            <if test="createTime!=null">
                create_time=#{createTime},
            </if>
            <if test="context!=null">
                context=#{context}
            </if>
        </set>
        WHERE  id=#{id}  AND del_flag=0
    </update>
    <select id="getNoticeById" parameterType="java.lang.Integer" resultMap="teamNotice">
        SELECT *
        FROM notice
        WHERE id=#{id} AND del_flag=0
    </select>
    <!--得到公告信息-->
    <select id="getNoticeByteamName" parameterType="java.lang.String" resultMap="teamNotice">
        SELECT *
        FROM notice
        WHERE team_name=#{teamName} AND del_flag=0
    </select>
    <insert id="insertTeamMasterHistory">
        INSERT INTO team_master_history (team_name,user_name,to_role,from_role,modify_by,modify_at)
        VALUES (#{teamName},#{userName},#{toRole},#{fromRole},#{modifyBy},#{modifyAt})
    </insert>
    <!--关于项目依附于团队的操作-->
    <resultMap id="projectReference" type="com.pms.model.project.ProjectReference">
        <result column="team_id" property="teamId"/>
        <result column="project_id" property="projectId"/>
        <result column="del_flag" property="delFlag"/>
    </resultMap>
    
    
    <!--关于文件的归属操作-->

    <resultMap id="fileReference" type="com.pms.model.team.FileReference">
        <id column="file_id" property="fileId"/>
        <result column="team_id" property="teamId"/>
        <result column="project_id" property="projectId"/>
        <result column="user_id" property="userId"/>
    </resultMap>

    <insert id="addTeamFile">
        insert into file_reference (file_id, team_id, user_id) values
        (#{fileId}, #{teamId},#{userId});
    </insert>
    <select id="getFRByFileId" parameterType="java.lang.Integer" resultMap="fileReference">
        SELECT * FROM file_reference
          WHERE
            file_id = #{fileId}
    </select>
    <select id="getFRByTeamId" parameterType="java.lang.Integer" resultMap="fileReference">
        SELECT * FROM file_reference
        WHERE
        team_id = #{teamId}
    </select>

</mapper>